/// <reference types="node" />
import { Client } from "./Client";
declare class VirtualClient extends Client {
    pairedSocket?: VirtualClient;
    latency: number;
    outQueue: Buffer[];
    /**
     * @constructor
     * @param {VirtualClient} [pairedSocket] When creating the second socket of a socket-pair provide the first socket as argument to get them paired.
     */
    constructor(pairedSocket?: VirtualClient);
    /**
     * Set a simulated latency of the socket communications.
     *
     * @param {number} latency in milliseconds for each send
     */
    setLatency(latency: number): void;
    /**
     * Hook events on the socket.
     */
    protected socketHook(): void;
    /**
     * Send the given buffer on socket.
     * @param {Buffer} buffer
     */
    protected socketSend(buffer: Buffer): void;
    /**
     * Specify the paired close procedure.
     */
    protected socketClose(): void;
    /**
     * Internal function to copy one message in the out queue to the paired socket.
     *
     */
    private copyToPaired;
}
export declare function CreatePair(): [VirtualClient, VirtualClient];
export {};
